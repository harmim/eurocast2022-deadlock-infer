union pthread_mutex_t
fields: {
           __pthread_mutex_s __data <> 
           char[40*1] __size <> 
           long __align <>
         }
statics: {}
supers: {}
objc_protocols: {}
methods: {
            pthread_mutex_t::~ 
            pthread_mutex_t:: 
            pthread_mutex_t:: 
            pthread_mutex_t::operator= 
            pthread_mutex_t::operator= 
            pthread_mutex_t::
          }
exported_obj_methods: {}
annots: {<>}
java_class_info: {[None]}
dummy: false
struct objc_object
fields: {}
statics: {}
supers: {}
objc_protocols: {}
methods: {}
exported_obj_methods: {}
annots: {<>}
java_class_info: {[None]}
dummy: false
class __pthread_internal_list
fields: {
           __pthread_internal_list* __prev <> 
           __pthread_internal_list* __next <>
         }
statics: {}
supers: {}
objc_protocols: {}
methods: {
            __pthread_internal_list::~__pthread_internal_list 
            __pthread_internal_list::__pthread_internal_list 
            __pthread_internal_list::__pthread_internal_list 
            __pthread_internal_list::operator= 
            __pthread_internal_list::operator= 
            __pthread_internal_list::__pthread_internal_list
          }
exported_obj_methods: {}
annots: {<_Cpp-Class>}
java_class_info: {[None]}
dummy: false
class std::try_to_lock_t
fields: {}
statics: {}
supers: {}
objc_protocols: {}
methods: {
            std::try_to_lock_t::try_to_lock_t 
            std::try_to_lock_t::try_to_lock_t 
            std::try_to_lock_t::try_to_lock_t
          }
exported_obj_methods: {}
annots: {<_Cpp-Class>}
java_class_info: {[None]}
dummy: false
class __pthread_mutex_s
fields: {
           int __lock <> 
           unsigned int __count <> 
           int __owner <> 
           unsigned int __nusers <> 
           int __kind <> 
           short __spins <> 
           short __elision <> 
           __pthread_internal_list __list <>
         }
statics: {}
supers: {}
objc_protocols: {}
methods: {
            __pthread_mutex_s::~__pthread_mutex_s 
            __pthread_mutex_s::__pthread_mutex_s 
            __pthread_mutex_s::__pthread_mutex_s 
            __pthread_mutex_s::operator= 
            __pthread_mutex_s::operator= 
            __pthread_mutex_s::__pthread_mutex_s
          }
exported_obj_methods: {}
annots: {<_Cpp-Class>}
java_class_info: {[None]}
dummy: false
class posix_mutex
fields: {
           pthread_mutex_t m_mut <>
         }
statics: {}
supers: {}
objc_protocols: {}
methods: {
            posix_mutex::posix_mutex 
            posix_mutex::operator= 
            posix_mutex::posix_mutex 
            posix_mutex::~posix_mutex 
            posix_mutex::lock 
            posix_mutex::unlock
          }
exported_obj_methods: {}
annots: {<_Cpp-Class>}
java_class_info: {[None]}
dummy: false
union pthread_mutexattr_t
fields: {
           char[4*1] __size <> 
           int __align <>
         }
statics: {}
supers: {}
objc_protocols: {}
methods: {}
exported_obj_methods: {}
annots: {<>}
java_class_info: {[None]}
dummy: false
class std::defer_lock_t
fields: {}
statics: {}
supers: {}
objc_protocols: {}
methods: {
            std::defer_lock_t::defer_lock_t 
            std::defer_lock_t::defer_lock_t 
            std::defer_lock_t::defer_lock_t 
            std::defer_lock_t::~defer_lock_t
          }
exported_obj_methods: {}
annots: {<_Cpp-Class>}
java_class_info: {[None]}
dummy: false
class std::adopt_lock_t
fields: {}
statics: {}
supers: {}
objc_protocols: {}
methods: {
            std::adopt_lock_t::adopt_lock_t 
            std::adopt_lock_t::adopt_lock_t 
            std::adopt_lock_t::adopt_lock_t
          }
exported_obj_methods: {}
annots: {<_Cpp-Class>}
java_class_info: {[None]}
dummy: false
struct objc_class
fields: {}
statics: {}
supers: {}
objc_protocols: {}
methods: {}
exported_obj_methods: {}
annots: {<>}
java_class_info: {[None]}
dummy: false
class std::unique_lock<posix_mutex>
fields: {
           posix_mutex* _M_device <> 
           _Bool _M_owns <>
         }
statics: {}
supers: {}
objc_protocols: {}
methods: {
            std::unique_lock<posix_mutex>::unique_lock 
            std::unique_lock<posix_mutex>::unique_lock 
            std::unique_lock<posix_mutex>::unique_lock 
            std::unique_lock<posix_mutex>::unique_lock 
            std::unique_lock<posix_mutex>::unique_lock 
            std::unique_lock<posix_mutex>::~unique_lock 
            std::unique_lock<posix_mutex>::unique_lock 
            std::unique_lock<posix_mutex>::operator= 
            std::unique_lock<posix_mutex>::unique_lock 
            std::unique_lock<posix_mutex>::operator= 
            std::unique_lock<posix_mutex>::lock 
            std::unique_lock<posix_mutex>::try_lock 
            std::unique_lock<posix_mutex>::unlock 
            std::unique_lock<posix_mutex>::swap 
            std::unique_lock<posix_mutex>::release 
            std::unique_lock<posix_mutex>::owns_lock 
            std::unique_lock<posix_mutex>::operator_bool 
            std::unique_lock<posix_mutex>::mutex
          }
exported_obj_methods: {}
annots: {<_Cpp-Class>}
java_class_info: {[None]}